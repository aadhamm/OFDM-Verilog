// -------------------------------------------------------------
// 
// File Name: D:\NU\OF\WHDLOFDMTransmitterExample_all_new\hdl_prj\hdlsrc3\whdlOFDMTransmitter_up_con\whdlOFDMTx\whdlOFDMTx_subFilter.v
// Created: 2023-05-02 12:36:37
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: whdlOFDMTx_subFilter
// Source Path: whdlOFDMTx/Discrete FIR Filter/Filter/subFilter
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module whdlOFDMTx_subFilter
          (clk,
           reset,
           enb_1_32_0,
           dinReg2_0_re,
           coefIn_0,
           coefIn_1,
           coefIn_2,
           coefIn_3,
           coefIn_4,
           coefIn_5,
           coefIn_6,
           coefIn_7,
           coefIn_8,
           coefIn_9,
           coefIn_10,
           dinRegVld,
           syncReset,
           dout_1_re,
           doutVld);


  input   clk;
  input   reset;
  input   enb_1_32_0;
  input   signed [15:0] dinReg2_0_re;  // sfix16_En14
  input   signed [15:0] coefIn_0;  // sfix16_En15
  input   signed [15:0] coefIn_1;  // sfix16_En15
  input   signed [15:0] coefIn_2;  // sfix16_En15
  input   signed [15:0] coefIn_3;  // sfix16_En15
  input   signed [15:0] coefIn_4;  // sfix16_En15
  input   signed [15:0] coefIn_5;  // sfix16_En15
  input   signed [15:0] coefIn_6;  // sfix16_En15
  input   signed [15:0] coefIn_7;  // sfix16_En15
  input   signed [15:0] coefIn_8;  // sfix16_En15
  input   signed [15:0] coefIn_9;  // sfix16_En15
  input   signed [15:0] coefIn_10;  // sfix16_En15
  input   dinRegVld;
  input   syncReset;
  output  signed [15:0] dout_1_re;  // sfix16_En13
  output  doutVld;


  reg  [0:9] intdelay_reg;  // ufix1 [10]
  wire [0:9] intdelay_reg_next;  // ufix1 [10]
  wire vldShift;
  wire vldOutTmp;
  wire signed [15:0] ZERO_OUT;  // sfix16_En13
  wire signed [31:0] addin;  // sfix32_En29
  wire signed [15:0] dinDly2;  // sfix16_En14
  reg signed [15:0] dinPreAdd;  // sfix16_En14
  wire signed [15:0] dinDly2_1;  // sfix16_En14
  wire signed [31:0] tapout;  // sfix32_En29
  wire signed [15:0] dinDly2_2;  // sfix16_En14
  wire signed [31:0] tapout_1;  // sfix32_En29
  wire signed [15:0] dinDly2_3;  // sfix16_En14
  wire signed [31:0] tapout_2;  // sfix32_En29
  wire signed [15:0] dinDly2_4;  // sfix16_En14
  wire signed [31:0] tapout_3;  // sfix32_En29
  wire signed [31:0] tapout_4;  // sfix32_En29
  wire signed [15:0] ZERO;  // sfix16_En14
  wire signed [15:0] dinDly2deadOutdeadOut;  // sfix16_En14
  wire signed [31:0] tapout_5;  // sfix32_En29
  wire signed [15:0] dout_cast;  // sfix16_En13
  wire signed [15:0] muxOut;  // sfix16_En13
  reg signed [15:0] dout_1_re_1;  // sfix16_En13
  reg  doutVld_1;


  always @(posedge clk or posedge reset)
    begin : intdelay_process
      if (reset == 1'b1) begin
        intdelay_reg[0] <= 1'b0;
        intdelay_reg[1] <= 1'b0;
        intdelay_reg[2] <= 1'b0;
        intdelay_reg[3] <= 1'b0;
        intdelay_reg[4] <= 1'b0;
        intdelay_reg[5] <= 1'b0;
        intdelay_reg[6] <= 1'b0;
        intdelay_reg[7] <= 1'b0;
        intdelay_reg[8] <= 1'b0;
        intdelay_reg[9] <= 1'b0;
      end
      else begin
        if (enb_1_32_0) begin
          if (syncReset == 1'b1) begin
            intdelay_reg[0] <= 1'b0;
            intdelay_reg[1] <= 1'b0;
            intdelay_reg[2] <= 1'b0;
            intdelay_reg[3] <= 1'b0;
            intdelay_reg[4] <= 1'b0;
            intdelay_reg[5] <= 1'b0;
            intdelay_reg[6] <= 1'b0;
            intdelay_reg[7] <= 1'b0;
            intdelay_reg[8] <= 1'b0;
            intdelay_reg[9] <= 1'b0;
          end
          else begin
            if (dinRegVld) begin
              intdelay_reg[0] <= intdelay_reg_next[0];
              intdelay_reg[1] <= intdelay_reg_next[1];
              intdelay_reg[2] <= intdelay_reg_next[2];
              intdelay_reg[3] <= intdelay_reg_next[3];
              intdelay_reg[4] <= intdelay_reg_next[4];
              intdelay_reg[5] <= intdelay_reg_next[5];
              intdelay_reg[6] <= intdelay_reg_next[6];
              intdelay_reg[7] <= intdelay_reg_next[7];
              intdelay_reg[8] <= intdelay_reg_next[8];
              intdelay_reg[9] <= intdelay_reg_next[9];
            end
          end
        end
      end
    end

  assign vldShift = intdelay_reg[9];
  assign intdelay_reg_next[0] = dinRegVld;
  assign intdelay_reg_next[1] = intdelay_reg[0];
  assign intdelay_reg_next[2] = intdelay_reg[1];
  assign intdelay_reg_next[3] = intdelay_reg[2];
  assign intdelay_reg_next[4] = intdelay_reg[3];
  assign intdelay_reg_next[5] = intdelay_reg[4];
  assign intdelay_reg_next[6] = intdelay_reg[5];
  assign intdelay_reg_next[7] = intdelay_reg[6];
  assign intdelay_reg_next[8] = intdelay_reg[7];
  assign intdelay_reg_next[9] = intdelay_reg[8];



  assign vldOutTmp = dinRegVld & vldShift;



  assign ZERO_OUT = 16'sb0000000000000000;



  assign addin = 32'sb00000000000000000000000000000000;



  always @(posedge clk or posedge reset)
    begin : intdelay_1_process
      if (reset == 1'b1) begin
        dinPreAdd <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_32_0) begin
          if (syncReset == 1'b1) begin
            dinPreAdd <= 16'sb0000000000000000;
          end
          else begin
            if (dinRegVld) begin
              dinPreAdd <= dinDly2;
            end
          end
        end
      end
    end



  whdlOFDMTx_FilterTapSystolicPreAddWvlIn u_FilterTap_1 (.clk(clk),
                                                         .enb_1_32_0(enb_1_32_0),
                                                         .dinReg2_0_re(dinReg2_0_re),  // sfix16_En14
                                                         .dinPreAdd(dinPreAdd),  // sfix16_En14
                                                         .coefIn_0(coefIn_0),  // sfix16_En15
                                                         .addin(addin),  // sfix32_En29
                                                         .dinRegVld(dinRegVld),
                                                         .syncReset(syncReset),
                                                         .dinDly2(dinDly2_1),  // sfix16_En14
                                                         .tapout(tapout)  // sfix32_En29
                                                         );

  whdlOFDMTx_FilterTapSystolicPreAddWvlIn u_FilterTap_2 (.clk(clk),
                                                         .enb_1_32_0(enb_1_32_0),
                                                         .dinReg2_0_re(dinDly2_1),  // sfix16_En14
                                                         .dinPreAdd(dinPreAdd),  // sfix16_En14
                                                         .coefIn_0(coefIn_1),  // sfix16_En15
                                                         .addin(tapout),  // sfix32_En29
                                                         .dinRegVld(dinRegVld),
                                                         .syncReset(syncReset),
                                                         .dinDly2(dinDly2_2),  // sfix16_En14
                                                         .tapout(tapout_1)  // sfix32_En29
                                                         );

  whdlOFDMTx_FilterTapSystolicPreAddWvlIn u_FilterTap_3 (.clk(clk),
                                                         .enb_1_32_0(enb_1_32_0),
                                                         .dinReg2_0_re(dinDly2_2),  // sfix16_En14
                                                         .dinPreAdd(dinPreAdd),  // sfix16_En14
                                                         .coefIn_0(coefIn_2),  // sfix16_En15
                                                         .addin(tapout_1),  // sfix32_En29
                                                         .dinRegVld(dinRegVld),
                                                         .syncReset(syncReset),
                                                         .dinDly2(dinDly2_3),  // sfix16_En14
                                                         .tapout(tapout_2)  // sfix32_En29
                                                         );

  whdlOFDMTx_FilterTapSystolicPreAddWvlIn u_FilterTap_4 (.clk(clk),
                                                         .enb_1_32_0(enb_1_32_0),
                                                         .dinReg2_0_re(dinDly2_3),  // sfix16_En14
                                                         .dinPreAdd(dinPreAdd),  // sfix16_En14
                                                         .coefIn_0(coefIn_3),  // sfix16_En15
                                                         .addin(tapout_2),  // sfix32_En29
                                                         .dinRegVld(dinRegVld),
                                                         .syncReset(syncReset),
                                                         .dinDly2(dinDly2_4),  // sfix16_En14
                                                         .tapout(tapout_3)  // sfix32_En29
                                                         );

  whdlOFDMTx_FilterTapSystolicPreAddWvlIn u_FilterTap_5 (.clk(clk),
                                                         .enb_1_32_0(enb_1_32_0),
                                                         .dinReg2_0_re(dinDly2_4),  // sfix16_En14
                                                         .dinPreAdd(dinPreAdd),  // sfix16_En14
                                                         .coefIn_0(coefIn_4),  // sfix16_En15
                                                         .addin(tapout_3),  // sfix32_En29
                                                         .dinRegVld(dinRegVld),
                                                         .syncReset(syncReset),
                                                         .dinDly2(dinDly2),  // sfix16_En14
                                                         .tapout(tapout_4)  // sfix32_En29
                                                         );

  assign ZERO = 16'sb0000000000000000;



  whdlOFDMTx_FilterTapSystolicPreAddWvlIn u_FilterTap_6 (.clk(clk),
                                                         .enb_1_32_0(enb_1_32_0),
                                                         .dinReg2_0_re(dinDly2),  // sfix16_En14
                                                         .dinPreAdd(ZERO),  // sfix16_En14
                                                         .coefIn_0(coefIn_5),  // sfix16_En15
                                                         .addin(tapout_4),  // sfix32_En29
                                                         .dinRegVld(dinRegVld),
                                                         .syncReset(syncReset),
                                                         .dinDly2(dinDly2deadOutdeadOut),  // sfix16_En14
                                                         .tapout(tapout_5)  // sfix32_En29
                                                         );

  assign dout_cast = tapout_5[31:16];



  assign muxOut = (vldOutTmp == 1'b0 ? ZERO_OUT :
              dout_cast);



  always @(posedge clk or posedge reset)
    begin : intdelay_2_process
      if (reset == 1'b1) begin
        dout_1_re_1 <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_32_0) begin
          if (syncReset == 1'b1) begin
            dout_1_re_1 <= 16'sb0000000000000000;
          end
          else begin
            dout_1_re_1 <= muxOut;
          end
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : intdelay_3_process
      if (reset == 1'b1) begin
        doutVld_1 <= 1'b0;
      end
      else begin
        if (enb_1_32_0) begin
          if (syncReset == 1'b1) begin
            doutVld_1 <= 1'b0;
          end
          else begin
            doutVld_1 <= vldOutTmp;
          end
        end
      end
    end



  assign dout_1_re = dout_1_re_1;

  assign doutVld = doutVld_1;

endmodule  // whdlOFDMTx_subFilter

